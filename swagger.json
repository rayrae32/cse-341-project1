{
  "swagger": "2.0",
  "info": {
    "title": "Users API",
    "description": "Users API with Authentication.",
    "version": "1.0.0"
  },
  "host": "cse-341-project1-anmp.onrender.com",
  "basePath": "/api",
  "schemes": ["https"],
  "paths": {
    "/": {
      "get": {
        "tags": ["Products"],
        "summary": "Get all products",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "type": "string",
            "required": false
          }
        ],
        "responses": {
          "200": { "description": "OK" },
          "401": { "description": "Unauthorized" },
          "403": { "description": "Forbidden" },
          "500": { "description": "Internal Server Error" }
        }
      },
      "post": {
        "tags": ["Products"],
        "summary": "Create a product",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "type": "string",
            "required": true
          }
        ],
        "responses": {
          "201": { "description": "Created" },
          "400": { "description": "Bad Request" },
          "401": { "description": "Unauthorized" },
          "403": { "description": "Forbidden" }
        }
      }
    },
    "/{id}": {
      "get": {
        "tags": ["Products"],
        "summary": "Get product by ID",
        "parameters": [
          { "name": "id", "in": "path", "required": true, "type": "string" },
          { "name": "Authorization", "in": "header", "type": "string" }
        ],
        "responses": {
          "200": { "description": "OK" },
          "401": { "description": "Unauthorized" },
          "403": { "description": "Forbidden" },
          "404": { "description": "Not Found" },
          "500": { "description": "Internal Server Error" }
        }
      },
      "put": {
        "tags": ["Products"],
        "summary": "Update product by ID",
        "parameters": [
          { "name": "id", "in": "path", "required": true, "type": "string" },
          { "name": "Authorization", "in": "header", "type": "string" }
        ],
        "responses": {
          "200": { "description": "OK" },
          "401": { "description": "Unauthorized" },
          "403": { "description": "Forbidden" },
          "404": { "description": "Not Found" },
          "500": { "description": "Internal Server Error" }
        }
      },
      "delete": {
        "tags": ["Products"],
        "summary": "Delete product by ID",
        "parameters": [
          { "name": "id", "in": "path", "required": true, "type": "string" },
          { "name": "Authorization", "in": "header", "type": "string" }
        ],
        "responses": {
          "200": { "description": "OK" },
          "401": { "description": "Unauthorized" },
          "403": { "description": "Forbidden" },
          "404": { "description": "Not Found" },
          "500": { "description": "Internal Server Error" }
        }
      }
    },
    "/auth/register": {
      "post": {
        "tags": ["User"],
        "summary": "Register a user",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "name": { "type": "string", "example": "John Doe" },
                "email": { "type": "string", "example": "john@example.com" },
                "password": { "type": "string", "example": "password123" }
              }
            }
          }
        ],
        "responses": {
          "201": { "description": "Created" },
          "400": { "description": "Bad Request" },
          "500": { "description": "Internal Server Error" }
        }
      }
    },
    "/auth/login": {
      "post": {
        "tags": ["User"],
        "summary": "Login a user",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "email": { "type": "string", "example": "john@example.com" },
                "password": { "type": "string", "example": "password123" }
              }
            }
          }
        ],
        "responses": {
          "200": { "description": "OK" },
          "401": { "description": "Unauthorized" },
          "500": { "description": "Internal Server Error" }
        }
      }
    },
    "/auth/profile": {
      "get": {
        "tags": ["User"],
        "summary": "Get user profile",
        "parameters": [
          { "name": "Authorization", "in": "header", "type": "string" }
        ],
        "responses": {
          "200": { "description": "OK" },
          "401": { "description": "Unauthorized" },
          "403": { "description": "Forbidden" }
        }
      }
    },
    "/categories": {
      "get": {
        "tags": ["Category"],
        "summary": "Get all categories",
        "responses": {
          "200": { "description": "OK" },
          "500": { "description": "Internal Server Error" }
        }
      },
      "post": {
        "tags": ["Category"],
        "summary": "Create a category",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "type": "string",
            "required": true
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "name": { "type": "string", "example": "Electronics" },
                "description": { "type": "string", "example": "Gadgets and Devices" }
              }
            }
          }
        ],
        "responses": {
          "201": { "description": "Created" },
          "400": { "description": "Bad Request" },
          "401": { "description": "Unauthorized" },
          "403": { "description": "Forbidden" },
          "500": { "description": "Internal Server Error" }
        }
      }
    },
    "/categories/{id}": {
      "get": {
        "tags": ["Category"],
        "summary": "Get category by ID",
        "parameters": [
          { "name": "id", "in": "path", "type": "string", "required": true }
        ],
        "responses": {
          "200": { "description": "OK" },
          "404": { "description": "Not Found" },
          "500": { "description": "Internal Server Error" }
        }
      },
      "put": {
        "tags": ["Category"],
        "summary": "Update category",
        "parameters": [
          { "name": "id", "in": "path", "type": "string", "required": true },
          { "name": "Authorization", "in": "header", "type": "string" }
        ],
        "responses": {
          "200": { "description": "OK" },
          "401": { "description": "Unauthorized" },
          "403": { "description": "Forbidden" },
          "404": { "description": "Not Found" },
          "500": { "description": "Internal Server Error" }
        }
      },
      "delete": {
        "tags": ["Category"],
        "summary": "Delete category",
        "parameters": [
          { "name": "id", "in": "path", "type": "string", "required": true },
          { "name": "Authorization", "in": "header", "type": "string" }
        ],
        "responses": {
          "200": { "description": "OK" },
          "401": { "description": "Unauthorized" },
          "403": { "description": "Forbidden" },
          "404": { "description": "Not Found" },
          "500": { "description": "Internal Server Error" }
        }
      }
    },
    "/orders": {
      "get": {
        "tags": ["Orders"],
        "summary": "Get all orders",
        "responses": {
          "200": { "description": "Successful response" }
        }
      },
      "post": {
        "tags": ["Orders"],
        "summary": "Create an order",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Order"
            }
          }
        ],
        "responses": {
          "201": { "description": "Order created" },
          "400": { "description": "Validation failed" }
        }
      }
    }
  },
  "definitions": {
    "Order": {
      "type": "object",
      "properties": {
        "userId": { "type": "string" },
        "productId": { "type": "string" },
        "quantity": { "type": "integer" },
        "totalPrice": { "type": "number" }
      },
      "required": ["userId", "productId", "quantity", "totalPrice"]
    }
  },
  "securityDefinitions": {
    "BearerAuth": {
      "type": "apiKey",
      "name": "Authorization",
      "in": "header"
    }
  },
  "security": [
    {
      "BearerAuth": []
    }
  ]
}
